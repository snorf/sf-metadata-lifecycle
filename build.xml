<!--
    Author  :   Johan Karlsteen
    Date    :   8/28/2017
    Address :   http://johan.karlsteen.com/
-->
<project name="Generate Package.xml subfile" default="retrieveUnpackaged" basedir="." xmlns:sf="antlib:com.salesforce">
    <property file="build.properties" />
    <import file="GeneratePackage_xml.xml" as="complete"/>
    
    <taskdef resource="com/salesforce/antlib.xml" uri="antlib:com.salesforce">
        <classpath>
            <pathelement location="${basedir}/lib/ant-salesforce.jar" />        	
        </classpath>
    </taskdef>

    <target name="retrieveUnpackaged" depends="testPackageXML">
        <mkdir dir="src/${sf.environmentname}" />
        <delete includeemptydirs="true">
            <fileset dir="src/${sf.environmentname}" includes="**/*"/>
        </delete>
        <!-- Retrieve the contents into another directory -->
        <sf:retrieve username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" retrieveTarget="src/${sf.environmentname}" unpackaged="${sf.xmlPath}/package.xml"/>
    </target>

	<!-- Retrieve the information of all items of a particular metadata type -->
    <target name="listMetadata">
        <sf:listMetadata username="${sf.username}" password="${sf.password}"  serverurl="${sf.serverurl}" metadataType="${sf.metadataType}"/>
    </target>

	<!-- Retrieve the information on all supported metadata type -->
    <target name="describeMetadata">
        <sf:describeMetadata username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}"/>
    </target>

    <!-- Shows check only; never actually saves to the server -->
    <target name="deployCodeCheckOnly">
      <sf:deploy username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" testLevel="RunLocalTests" deployRoot="codepkg" checkOnly="true"/>
    </target>

	<!-- Shows deploying code and running tests only within the org namespace -->
	<target name="deployCodeRunLocalTests">
      <sf:deploy username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" deployRoot="${deployRoot}" checkOnly="${checkOnly}" testLevel="${testLevel}" rollbackOnError="true"/>
	</target>
</project>